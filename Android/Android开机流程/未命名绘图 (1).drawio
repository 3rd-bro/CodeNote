<mxfile host="app.diagrams.net" modified="2024-06-13T14:04:18.016Z" agent="Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/125.0.0.0 Safari/537.36 Edg/125.0.0.0" etag="_RNo_6PdpPZdVnz3QYkw" version="24.5.4" type="device">
  <diagram name="第 1 页" id="DawjmAu558kR9u3pKr8u">
    <mxGraphModel dx="1464" dy="1626" grid="0" gridSize="10" guides="1" tooltips="1" connect="1" arrows="1" fold="1" page="0" pageScale="1" pageWidth="827" pageHeight="1169" math="0" shadow="0">
      <root>
        <mxCell id="0" />
        <mxCell id="1" parent="0" />
        <mxCell id="MoC7zlUmWlkR-KNbExdE-12" value="" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#f5f5f5;fontColor=#333333;strokeColor=#666666;" parent="1" vertex="1">
          <mxGeometry x="-542" y="-226" width="595" height="713" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-3" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" source="MoC7zlUmWlkR-KNbExdE-1" target="MoC7zlUmWlkR-KNbExdE-2" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-11" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;entryX=0;entryY=0.5;entryDx=0;entryDy=0;" parent="1" source="MoC7zlUmWlkR-KNbExdE-1" target="MoC7zlUmWlkR-KNbExdE-14" edge="1">
          <mxGeometry relative="1" as="geometry">
            <mxPoint x="78" y="-161.5413153456998" as="targetPoint" />
          </mxGeometry>
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-1" value="第一阶段" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="-118" y="-192" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-5" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;fillColor=#ffe6cc;strokeColor=#d79b00;" parent="1" source="MoC7zlUmWlkR-KNbExdE-2" target="MoC7zlUmWlkR-KNbExdE-4" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-22" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" parent="1" source="MoC7zlUmWlkR-KNbExdE-2" target="MoC7zlUmWlkR-KNbExdE-21" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-2" value="SELinux" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="-118" y="53" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-24" value="" style="edgeStyle=none;curved=1;rounded=0;orthogonalLoop=1;jettySize=auto;html=1;fontSize=12;startSize=8;endSize=8;" parent="1" source="MoC7zlUmWlkR-KNbExdE-4" target="MoC7zlUmWlkR-KNbExdE-23" edge="1">
          <mxGeometry relative="1" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-4" value="第二阶段" style="rounded=0;whiteSpace=wrap;html=1;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="-118" y="342" width="120" height="60" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-13" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;main&lt;/h1&gt;&lt;p&gt;1. 无参数：调用ueventd_main()方法，为Init进程第一初始化阶段；&lt;/p&gt;&lt;p&gt;2. selinux_setup ： 调用SetupSelinux()方法，为Init进程初始化SeLinux的阶段；&lt;/p&gt;&lt;p&gt;3. second_stage ： 调用SecondStageMain()方法，为Init进程第二初始化阶段；&lt;/p&gt;&lt;p&gt;4. ueventd ： 调用ueventd_main()方法；&lt;/p&gt;&lt;p&gt;5. subcontext ： 调用SubcontextMain()方法；&lt;/p&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;" parent="1" vertex="1">
          <mxGeometry x="-512" y="-24" width="366" height="214" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-14" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;FirstStageMain&lt;br&gt;/system/core/init/first_stage_init.cpp&lt;br&gt;&lt;/h1&gt;&lt;div&gt;1.&amp;nbsp;如果配置为在发生panic时重启到bootloader，则安装重启信号处理程序；&lt;br&gt;2. 设置环境变量PATH；&lt;br&gt;3. 挂载所需的基本的文件系统，包括 tmpfs、dev、proc、sysfs、selinuxfs等， 并创建文件夹、设置权限、创建节点等， 其他的由rc文件处理；&lt;br&gt;4.&amp;nbsp; 重定向标准打印到dev/null， 初始化内核打印；&lt;br&gt;5.&amp;nbsp;&lt;b&gt;init first stage started!&lt;/b&gt;&lt;br&gt;6. 确定启动内核模块的参数， 并启动内核模块（如是否需要控制台、 是否需要并行加载等）， 最后打印耗时 &lt;b&gt;（&lt;span style=&quot;background-color: initial;&quot;&gt;LOG(INFO) &amp;lt;&amp;lt; &quot;Loaded &quot; &amp;lt;&amp;lt; module_count &amp;lt;&amp;lt; &quot; kernel modules took &quot;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&amp;nbsp;&amp;lt;&amp;lt; module_elapse_time.count() &amp;lt;&amp;lt; &quot; ms&quot;;&lt;/span&gt;&lt;/b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;）&lt;/b&gt;；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;7. 创建设备节点DoCreateDevices；&lt;br&gt;8. 启动控制台StartConsole；&lt;/div&gt;&lt;div&gt;9. 如果&quot;/system/etc/ramdisk/build.prop&quot;存在， 就将将这个文件拷贝到/second_stage_resources；&lt;b&gt;&quot;LOG(INFO) &amp;lt;&amp;lt; &quot;Copied ramdisk prop to &quot; &amp;lt;&amp;lt; dest;&quot;&lt;/b&gt;；&lt;br&gt;10.&amp;nbsp;如果存在&quot;/force_debuggable&quot;，则设置环境变量INIT_FORCE_DEBUGGABLE以供第二阶段init使用；&lt;br&gt;11. 如果是正常启动ForceNormalBoot， 则将root目录设为/first_stage_ramdisk；&lt;br&gt;12.&amp;nbsp;进行第一阶段挂载，如果未创建设备节点，则传递false；&lt;br&gt;13.&amp;nbsp;在Recovery模式下设置初始AVB版本；&lt;br&gt;14. 记录第一阶段启动时间环境变量&lt;b&gt;FIRST_STAGE_STARTED_AT&lt;/b&gt;；&lt;br&gt;15. &lt;b&gt;执行/system/bin/init， 参数selinux_setup；&lt;/b&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;fillColor=#dae8fc;strokeColor=#6c8ebf;" parent="1" vertex="1">
          <mxGeometry x="106" y="-431" width="607" height="342" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-21" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;SetupSelinux&lt;br&gt;/system/core/init/selinux.cpp&lt;br&gt;&lt;/h1&gt;&lt;div&gt;1. 像第一阶段开始， 重定向打印， 如果REBOOT_BOOTLOADER_ON_PANIC，就重写singal handler， 在异常时重启；&lt;br&gt;2. 挂载一些缺失的分区，如product分区等；&lt;br&gt;3.&amp;nbsp;SelinuxSetupKernelLogging();设置内核日志；&lt;br&gt;4.&amp;nbsp;&lt;b&gt;LOG(INFO) &amp;lt;&amp;lt; &quot;Opening SELinux policy&quot;;&lt;/b&gt;&lt;br&gt;5. 准备APEX sepolicy， 主要是校验证书、目录，然后从SEPolicy.zip中提取&lt;span style=&quot;background-color: initial;&quot;&gt;APEX sepolicy；&lt;br&gt;6. &lt;b&gt;读取APEX sepolicy；&lt;/b&gt;&lt;br&gt;7. 清理sepolicy；&lt;br&gt;8. 如果需要， 创建一个&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;SnapuserdSelinuxHelper， 然后在加载策略前后调用&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Transition()&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;；（这里应该是为了兼容不同版本）；&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;9. &lt;b&gt;加载Selinux策略，&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;LoadSelinuxPolicy(policy);&amp;nbsp;&amp;nbsp;LOG(INFO) &amp;lt;&amp;lt; &quot;Loading SELinux policy&quot;;&lt;/b&gt;&lt;br&gt;10. &lt;b&gt;开始执行selinux&amp;nbsp;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;&amp;nbsp;SelinuxSetEnforcement();；&lt;/b&gt;&lt;br&gt;11. &lt;b&gt;设置Selinux启动时间环境变量&quot;&lt;/b&gt;&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;&lt;b&gt;SELINUX_STARTED_AT&quot;&lt;/b&gt;；&lt;br&gt;12. &lt;b&gt;启动&lt;/b&gt;&lt;/span&gt;&lt;b&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;Init&lt;/span&gt;&lt;span style=&quot;background-color: initial;&quot;&gt;第二阶段；&lt;/span&gt;&lt;/b&gt;&lt;/div&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;fillColor=#d5e8d4;strokeColor=#82b366;" parent="1" vertex="1">
          <mxGeometry x="106" y="-50" width="615" height="266" as="geometry" />
        </mxCell>
        <mxCell id="MoC7zlUmWlkR-KNbExdE-23" value="&lt;h1 style=&quot;margin-top: 0px;&quot;&gt;&lt;font face=&quot;Helvetica&quot;&gt;SecondStageMain&amp;nbsp;&lt;br&gt;/system/core/init/init.cpp&lt;/font&gt;&lt;/h1&gt;&lt;pre style=&quot;border: 0px; margin-top: 0px; margin-bottom: 0px;&quot;&gt;&lt;span style=&quot;display: inline;&quot; class=&quot;scope-body&quot;&gt;&lt;font face=&quot;i02FL8NnM69u9rG2lT4C&quot;&gt;1. InstallRebootSignalHandlers();捕获部分标准信号；&lt;br&gt;2. SetStdioToDevNull(argv); 重定向stdin、stdout、stderr到 /dev/null（可以理解丢弃部分打印）；&lt;br&gt;3. InitKernelLogging(argv);、SelinuxSetupKernelLogging();初始化内核和selinux的日志；&lt;br&gt;4. &lt;b&gt;设置Init进程和Init的子进程的OOM_ADJ值&lt;/b&gt;， ADJ值用来决定内存回收的优先顺序， ADJ值越大， 越容易被回收， 这里设置的是-1000， 最小的ADJ值；&lt;br&gt;9. 卸载第二阶段的资源；&lt;br&gt;10. 如果第7步允许adb root， 这个时候再卸载ramdisk&lt;br&gt;11. 挂载额外的文件系统；&lt;br&gt;12. 在第二阶段启动SELinux&lt;br&gt;13. &lt;/font&gt;&lt;/span&gt;&lt;/pre&gt;" style="text;html=1;whiteSpace=wrap;overflow=hidden;rounded=0;fillColor=#fff2cc;strokeColor=#d6b656;" parent="1" vertex="1">
          <mxGeometry x="106" y="255" width="934" height="327" as="geometry" />
        </mxCell>
      </root>
    </mxGraphModel>
  </diagram>
</mxfile>
